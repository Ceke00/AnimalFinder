{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Elev\\\\source\\\\Fullstack\\\\AnimalFinder\\\\animal-finder-frontend\\\\src\\\\pages\\\\LoginPage.jsx\",\n  _s = $RefreshSig$();\n// import React, { useState } from \"react\";\n// import AuthService from \"../services/auth.service\";\n// import { useNavigate } from \"react-router-dom\";\n// import Button from \"react-bootstrap/Button\";\n// import Form from \"react-bootstrap/Form\";\n// import { Link } from \"react-router-dom\";\n\n// const LoginPage = () => {\n//   const [email, setEmail] = useState(\"\");\n//   const [password, setPassword] = useState(\"\");\n//   const [message, setMessage] = useState(\"\");\n//   const navigate = useNavigate();\n\n//   //If login ok navigate to memberpage, else show error message\n//   const handleLogin = async (e) => {\n//     e.preventDefault();\n//     try {\n//       const userData = await AuthService.login(email, password);\n//       console.log(\"Logged in user data:\", userData);\n//       navigate(\"/memberpage\");\n//     } catch (error) {\n//       console.error(\"Login error: \", error);\n//       setMessage(\"Login failed...\");\n//     }\n//   };\n\n//   return (\n//     <Form onSubmit={handleLogin}>\n//       <Form.Group className=\"mb-3\" controlId=\"formBasicEmail\">\n//         <Form.Label>Email</Form.Label>\n//         <Form.Control\n//           type=\"email\"\n//           placeholder=\"Enter email\"\n//           value={email}\n//           onChange={(e) => setEmail(e.target.value)}\n//         />\n//       </Form.Group>\n//       <Form.Group className=\"mb-3\" controlId=\"formBasicPassword\">\n//         <Form.Label>Password</Form.Label>\n//         <Form.Control\n//           placeholder=\"Enter password\"\n//           type=\"password\"\n//           value={password}\n//           onChange={(e) => setPassword(e.target.value)}\n//         />\n//       </Form.Group>\n//       <p>\n//         Not a member yet? <Link to=\"/register\"> Register here!</Link>{\" \"}\n//       </p>\n\n//       <Button variant=\"primary\" type=\"submit\">\n//         Login\n//       </Button>\n//       {message && <p className=\"text-danger\">{message}</p>}\n//     </Form>\n//   );\n// };\n\n// export default LoginPage;\n\nimport React, { useState } from \"react\";\nimport AuthService from \"../services/auth.service\";\nimport { useNavigate } from \"react-router-dom\";\nimport Button from \"react-bootstrap/Button\";\nimport Form from \"react-bootstrap/Form\";\nimport { Link } from \"react-router-dom\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst LoginPage = () => {\n  _s();\n  const [email, setEmail] = useState(\"\");\n  const [password, setPassword] = useState(\"\");\n  const [errors, setErrors] = useState({});\n  const navigate = useNavigate();\n\n  // If login ok navigate to memberpage, else show error message\n  const handleLogin = async e => {\n    e.preventDefault();\n    setErrors({});\n    try {\n      const userData = await AuthService.login(email, password);\n      console.log(\"Logged in user data:\", userData);\n      navigate(\"/memberpage\");\n    } catch (error) {\n      var _error$response;\n      console.error(\"Login error: \", error);\n      if ((_error$response = error.response) !== null && _error$response !== void 0 && _error$response.data) {\n        if (error.response.data.errors) {\n          const errorMessages = error.response.data.errors;\n          const newErrors = {};\n          for (const key in errorMessages) {\n            newErrors[key] = errorMessages[key].join(\" \");\n          }\n          setErrors(newErrors);\n        } else {\n          setErrors({\n            general: Array.isArray(error.response.data) ? error.response.data.join(\" \") : error.response.data.title || \"Login failed.\"\n          });\n        }\n      } else {\n        setErrors({\n          general: \"Login failed.\"\n        });\n      }\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(Form, {\n    onSubmit: handleLogin,\n    children: [/*#__PURE__*/_jsxDEV(Form.Group, {\n      className: \"mb-3\",\n      controlId: \"formBasicEmail\",\n      children: [/*#__PURE__*/_jsxDEV(Form.Label, {\n        children: \"Email\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 108,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Form.Control, {\n        type: \"email\",\n        placeholder: \"Enter email\",\n        value: email,\n        onChange: e => setEmail(e.target.value)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 109,\n        columnNumber: 9\n      }, this), errors.Email && /*#__PURE__*/_jsxDEV(\"p\", {\n        className: \"text-danger\",\n        children: errors.Email\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 115,\n        columnNumber: 26\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 107,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Form.Group, {\n      className: \"mb-3\",\n      controlId: \"formBasicPassword\",\n      children: [/*#__PURE__*/_jsxDEV(Form.Label, {\n        children: \"Password\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 118,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Form.Control, {\n        placeholder: \"Enter password\",\n        type: \"password\",\n        value: password,\n        onChange: e => setPassword(e.target.value)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 119,\n        columnNumber: 9\n      }, this), errors.Password && /*#__PURE__*/_jsxDEV(\"p\", {\n        className: \"text-danger\",\n        children: errors.Password\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 125,\n        columnNumber: 29\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 117,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n      children: [\"Not a member yet? \", /*#__PURE__*/_jsxDEV(Link, {\n        to: \"/register\",\n        children: \" Register here!\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 128,\n        columnNumber: 27\n      }, this), \" \"]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 127,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Button, {\n      variant: \"primary\",\n      type: \"submit\",\n      children: \"Login\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 131,\n      columnNumber: 7\n    }, this), errors.general && /*#__PURE__*/_jsxDEV(\"p\", {\n      className: \"text-danger\",\n      children: errors.general\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 134,\n      columnNumber: 26\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 106,\n    columnNumber: 5\n  }, this);\n};\n_s(LoginPage, \"Vxg9+H9YiYh6l7plsgFLLVrvQN8=\", false, function () {\n  return [useNavigate];\n});\n_c = LoginPage;\nexport default LoginPage;\nvar _c;\n$RefreshReg$(_c, \"LoginPage\");","map":{"version":3,"names":["React","useState","AuthService","useNavigate","Button","Form","Link","jsxDEV","_jsxDEV","LoginPage","_s","email","setEmail","password","setPassword","errors","setErrors","navigate","handleLogin","e","preventDefault","userData","login","console","log","error","_error$response","response","data","errorMessages","newErrors","key","join","general","Array","isArray","title","onSubmit","children","Group","className","controlId","Label","fileName","_jsxFileName","lineNumber","columnNumber","Control","type","placeholder","value","onChange","target","Email","Password","to","variant","_c","$RefreshReg$"],"sources":["C:/Users/Elev/source/Fullstack/AnimalFinder/animal-finder-frontend/src/pages/LoginPage.jsx"],"sourcesContent":["// import React, { useState } from \"react\";\r\n// import AuthService from \"../services/auth.service\";\r\n// import { useNavigate } from \"react-router-dom\";\r\n// import Button from \"react-bootstrap/Button\";\r\n// import Form from \"react-bootstrap/Form\";\r\n// import { Link } from \"react-router-dom\";\r\n\r\n// const LoginPage = () => {\r\n//   const [email, setEmail] = useState(\"\");\r\n//   const [password, setPassword] = useState(\"\");\r\n//   const [message, setMessage] = useState(\"\");\r\n//   const navigate = useNavigate();\r\n\r\n//   //If login ok navigate to memberpage, else show error message\r\n//   const handleLogin = async (e) => {\r\n//     e.preventDefault();\r\n//     try {\r\n//       const userData = await AuthService.login(email, password);\r\n//       console.log(\"Logged in user data:\", userData);\r\n//       navigate(\"/memberpage\");\r\n//     } catch (error) {\r\n//       console.error(\"Login error: \", error);\r\n//       setMessage(\"Login failed...\");\r\n//     }\r\n//   };\r\n\r\n//   return (\r\n//     <Form onSubmit={handleLogin}>\r\n//       <Form.Group className=\"mb-3\" controlId=\"formBasicEmail\">\r\n//         <Form.Label>Email</Form.Label>\r\n//         <Form.Control\r\n//           type=\"email\"\r\n//           placeholder=\"Enter email\"\r\n//           value={email}\r\n//           onChange={(e) => setEmail(e.target.value)}\r\n//         />\r\n//       </Form.Group>\r\n//       <Form.Group className=\"mb-3\" controlId=\"formBasicPassword\">\r\n//         <Form.Label>Password</Form.Label>\r\n//         <Form.Control\r\n//           placeholder=\"Enter password\"\r\n//           type=\"password\"\r\n//           value={password}\r\n//           onChange={(e) => setPassword(e.target.value)}\r\n//         />\r\n//       </Form.Group>\r\n//       <p>\r\n//         Not a member yet? <Link to=\"/register\"> Register here!</Link>{\" \"}\r\n//       </p>\r\n\r\n//       <Button variant=\"primary\" type=\"submit\">\r\n//         Login\r\n//       </Button>\r\n//       {message && <p className=\"text-danger\">{message}</p>}\r\n//     </Form>\r\n//   );\r\n// };\r\n\r\n// export default LoginPage;\r\n\r\nimport React, { useState } from \"react\";\r\nimport AuthService from \"../services/auth.service\";\r\nimport { useNavigate } from \"react-router-dom\";\r\nimport Button from \"react-bootstrap/Button\";\r\nimport Form from \"react-bootstrap/Form\";\r\nimport { Link } from \"react-router-dom\";\r\n\r\nconst LoginPage = () => {\r\n  const [email, setEmail] = useState(\"\");\r\n  const [password, setPassword] = useState(\"\");\r\n  const [errors, setErrors] = useState({});\r\n  const navigate = useNavigate();\r\n\r\n  // If login ok navigate to memberpage, else show error message\r\n  const handleLogin = async (e) => {\r\n    e.preventDefault();\r\n    setErrors({});\r\n    try {\r\n      const userData = await AuthService.login(email, password);\r\n      console.log(\"Logged in user data:\", userData);\r\n      navigate(\"/memberpage\");\r\n    } catch (error) {\r\n      console.error(\"Login error: \", error);\r\n      if (error.response?.data) {\r\n        if (error.response.data.errors) {\r\n          const errorMessages = error.response.data.errors;\r\n          const newErrors = {};\r\n          for (const key in errorMessages) {\r\n            newErrors[key] = errorMessages[key].join(\" \");\r\n          }\r\n          setErrors(newErrors);\r\n        } else {\r\n          setErrors({\r\n            general: Array.isArray(error.response.data)\r\n              ? error.response.data.join(\" \")\r\n              : error.response.data.title || \"Login failed.\",\r\n          });\r\n        }\r\n      } else {\r\n        setErrors({ general: \"Login failed.\" });\r\n      }\r\n    }\r\n  };\r\n\r\n  return (\r\n    <Form onSubmit={handleLogin}>\r\n      <Form.Group className=\"mb-3\" controlId=\"formBasicEmail\">\r\n        <Form.Label>Email</Form.Label>\r\n        <Form.Control\r\n          type=\"email\"\r\n          placeholder=\"Enter email\"\r\n          value={email}\r\n          onChange={(e) => setEmail(e.target.value)}\r\n        />\r\n        {errors.Email && <p className=\"text-danger\">{errors.Email}</p>}\r\n      </Form.Group>\r\n      <Form.Group className=\"mb-3\" controlId=\"formBasicPassword\">\r\n        <Form.Label>Password</Form.Label>\r\n        <Form.Control\r\n          placeholder=\"Enter password\"\r\n          type=\"password\"\r\n          value={password}\r\n          onChange={(e) => setPassword(e.target.value)}\r\n        />\r\n        {errors.Password && <p className=\"text-danger\">{errors.Password}</p>}\r\n      </Form.Group>\r\n      <p>\r\n        Not a member yet? <Link to=\"/register\"> Register here!</Link>{\" \"}\r\n      </p>\r\n\r\n      <Button variant=\"primary\" type=\"submit\">\r\n        Login\r\n      </Button>\r\n      {errors.general && <p className=\"text-danger\">{errors.general}</p>}\r\n    </Form>\r\n  );\r\n};\r\n\r\nexport default LoginPage;"],"mappings":";;AAAA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA,OAAOA,KAAK,IAAIC,QAAQ,QAAQ,OAAO;AACvC,OAAOC,WAAW,MAAM,0BAA0B;AAClD,SAASC,WAAW,QAAQ,kBAAkB;AAC9C,OAAOC,MAAM,MAAM,wBAAwB;AAC3C,OAAOC,IAAI,MAAM,sBAAsB;AACvC,SAASC,IAAI,QAAQ,kBAAkB;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAExC,MAAMC,SAAS,GAAGA,CAAA,KAAM;EAAAC,EAAA;EACtB,MAAM,CAACC,KAAK,EAAEC,QAAQ,CAAC,GAAGX,QAAQ,CAAC,EAAE,CAAC;EACtC,MAAM,CAACY,QAAQ,EAAEC,WAAW,CAAC,GAAGb,QAAQ,CAAC,EAAE,CAAC;EAC5C,MAAM,CAACc,MAAM,EAAEC,SAAS,CAAC,GAAGf,QAAQ,CAAC,CAAC,CAAC,CAAC;EACxC,MAAMgB,QAAQ,GAAGd,WAAW,CAAC,CAAC;;EAE9B;EACA,MAAMe,WAAW,GAAG,MAAOC,CAAC,IAAK;IAC/BA,CAAC,CAACC,cAAc,CAAC,CAAC;IAClBJ,SAAS,CAAC,CAAC,CAAC,CAAC;IACb,IAAI;MACF,MAAMK,QAAQ,GAAG,MAAMnB,WAAW,CAACoB,KAAK,CAACX,KAAK,EAAEE,QAAQ,CAAC;MACzDU,OAAO,CAACC,GAAG,CAAC,sBAAsB,EAAEH,QAAQ,CAAC;MAC7CJ,QAAQ,CAAC,aAAa,CAAC;IACzB,CAAC,CAAC,OAAOQ,KAAK,EAAE;MAAA,IAAAC,eAAA;MACdH,OAAO,CAACE,KAAK,CAAC,eAAe,EAAEA,KAAK,CAAC;MACrC,KAAAC,eAAA,GAAID,KAAK,CAACE,QAAQ,cAAAD,eAAA,eAAdA,eAAA,CAAgBE,IAAI,EAAE;QACxB,IAAIH,KAAK,CAACE,QAAQ,CAACC,IAAI,CAACb,MAAM,EAAE;UAC9B,MAAMc,aAAa,GAAGJ,KAAK,CAACE,QAAQ,CAACC,IAAI,CAACb,MAAM;UAChD,MAAMe,SAAS,GAAG,CAAC,CAAC;UACpB,KAAK,MAAMC,GAAG,IAAIF,aAAa,EAAE;YAC/BC,SAAS,CAACC,GAAG,CAAC,GAAGF,aAAa,CAACE,GAAG,CAAC,CAACC,IAAI,CAAC,GAAG,CAAC;UAC/C;UACAhB,SAAS,CAACc,SAAS,CAAC;QACtB,CAAC,MAAM;UACLd,SAAS,CAAC;YACRiB,OAAO,EAAEC,KAAK,CAACC,OAAO,CAACV,KAAK,CAACE,QAAQ,CAACC,IAAI,CAAC,GACvCH,KAAK,CAACE,QAAQ,CAACC,IAAI,CAACI,IAAI,CAAC,GAAG,CAAC,GAC7BP,KAAK,CAACE,QAAQ,CAACC,IAAI,CAACQ,KAAK,IAAI;UACnC,CAAC,CAAC;QACJ;MACF,CAAC,MAAM;QACLpB,SAAS,CAAC;UAAEiB,OAAO,EAAE;QAAgB,CAAC,CAAC;MACzC;IACF;EACF,CAAC;EAED,oBACEzB,OAAA,CAACH,IAAI;IAACgC,QAAQ,EAAEnB,WAAY;IAAAoB,QAAA,gBAC1B9B,OAAA,CAACH,IAAI,CAACkC,KAAK;MAACC,SAAS,EAAC,MAAM;MAACC,SAAS,EAAC,gBAAgB;MAAAH,QAAA,gBACrD9B,OAAA,CAACH,IAAI,CAACqC,KAAK;QAAAJ,QAAA,EAAC;MAAK;QAAAK,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAY,CAAC,eAC9BtC,OAAA,CAACH,IAAI,CAAC0C,OAAO;QACXC,IAAI,EAAC,OAAO;QACZC,WAAW,EAAC,aAAa;QACzBC,KAAK,EAAEvC,KAAM;QACbwC,QAAQ,EAAGhC,CAAC,IAAKP,QAAQ,CAACO,CAAC,CAACiC,MAAM,CAACF,KAAK;MAAE;QAAAP,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAC3C,CAAC,EACD/B,MAAM,CAACsC,KAAK,iBAAI7C,OAAA;QAAGgC,SAAS,EAAC,aAAa;QAAAF,QAAA,EAAEvB,MAAM,CAACsC;MAAK;QAAAV,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAI,CAAC;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACpD,CAAC,eACbtC,OAAA,CAACH,IAAI,CAACkC,KAAK;MAACC,SAAS,EAAC,MAAM;MAACC,SAAS,EAAC,mBAAmB;MAAAH,QAAA,gBACxD9B,OAAA,CAACH,IAAI,CAACqC,KAAK;QAAAJ,QAAA,EAAC;MAAQ;QAAAK,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAY,CAAC,eACjCtC,OAAA,CAACH,IAAI,CAAC0C,OAAO;QACXE,WAAW,EAAC,gBAAgB;QAC5BD,IAAI,EAAC,UAAU;QACfE,KAAK,EAAErC,QAAS;QAChBsC,QAAQ,EAAGhC,CAAC,IAAKL,WAAW,CAACK,CAAC,CAACiC,MAAM,CAACF,KAAK;MAAE;QAAAP,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAC9C,CAAC,EACD/B,MAAM,CAACuC,QAAQ,iBAAI9C,OAAA;QAAGgC,SAAS,EAAC,aAAa;QAAAF,QAAA,EAAEvB,MAAM,CAACuC;MAAQ;QAAAX,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAI,CAAC;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAC1D,CAAC,eACbtC,OAAA;MAAA8B,QAAA,GAAG,oBACiB,eAAA9B,OAAA,CAACF,IAAI;QAACiD,EAAE,EAAC,WAAW;QAAAjB,QAAA,EAAC;MAAe;QAAAK,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAM,CAAC,EAAC,GAAG;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAChE,CAAC,eAEJtC,OAAA,CAACJ,MAAM;MAACoD,OAAO,EAAC,SAAS;MAACR,IAAI,EAAC,QAAQ;MAAAV,QAAA,EAAC;IAExC;MAAAK,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAQ,CAAC,EACR/B,MAAM,CAACkB,OAAO,iBAAIzB,OAAA;MAAGgC,SAAS,EAAC,aAAa;MAAAF,QAAA,EAAEvB,MAAM,CAACkB;IAAO;MAAAU,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAI,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OAC9D,CAAC;AAEX,CAAC;AAACpC,EAAA,CArEID,SAAS;EAAA,QAIIN,WAAW;AAAA;AAAAsD,EAAA,GAJxBhD,SAAS;AAuEf,eAAeA,SAAS;AAAC,IAAAgD,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}