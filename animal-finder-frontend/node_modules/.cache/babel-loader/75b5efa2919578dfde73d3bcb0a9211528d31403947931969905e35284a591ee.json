{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Elev\\\\source\\\\Fullstack\\\\AnimalFinder\\\\animal-finder-frontend\\\\src\\\\components\\\\Test.jsx\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from \"react\";\nimport TestService from \"../services/test.service\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Test = () => {\n  _s();\n  const [tests, setTests] = useState([]);\n  useEffect(() => {\n    const fetchTests = async () => {\n      try {\n        const response = await TestService.getTests();\n        setTests(response.data);\n      } catch (error) {\n        console.error(\"Error fetching tests:\", error);\n      }\n    };\n    fetchTests();\n  }, []);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"Tests\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 22,\n      columnNumber: 7\n    }, this), tests.length === 0 ? /*#__PURE__*/_jsxDEV(\"p\", {\n      children: \"No tests found.\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 24,\n      columnNumber: 9\n    }, this) : /*#__PURE__*/_jsxDEV(\"ul\", {\n      children: tests.map(test => /*#__PURE__*/_jsxDEV(\"li\", {\n        children: [/*#__PURE__*/_jsxDEV(\"p\", {\n          children: [test.Name, \" \"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 29,\n          columnNumber: 15\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          children: [\" \", test.Desciption]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 30,\n          columnNumber: 15\n        }, this)]\n      }, test.Id, true, {\n        fileName: _jsxFileName,\n        lineNumber: 28,\n        columnNumber: 13\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 26,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 21,\n    columnNumber: 5\n  }, this);\n};\n_s(Test, \"FxEWQGYuZijDeGUIGSMauBw8Rzg=\");\n_c = Test;\nexport default Test;\nvar _c;\n$RefreshReg$(_c, \"Test\");","map":{"version":3,"names":["React","useState","useEffect","TestService","jsxDEV","_jsxDEV","Test","_s","tests","setTests","fetchTests","response","getTests","data","error","console","children","fileName","_jsxFileName","lineNumber","columnNumber","length","map","test","Name","Desciption","Id","_c","$RefreshReg$"],"sources":["C:/Users/Elev/source/Fullstack/AnimalFinder/animal-finder-frontend/src/components/Test.jsx"],"sourcesContent":["import React, { useState, useEffect } from \"react\";\r\nimport TestService from \"../services/test.service\";\r\n\r\nconst Test = () => {\r\n  const [tests, setTests] = useState([]);\r\n\r\n  useEffect(() => {\r\n    const fetchTests = async () => {\r\n      try {\r\n        const response = await TestService.getTests();\r\n        setTests(response.data);\r\n      } catch (error) {\r\n        console.error(\"Error fetching tests:\", error);\r\n      }\r\n    };\r\n\r\n    fetchTests();\r\n  }, []);\r\n\r\n  return (\r\n    <div>\r\n      <h1>Tests</h1>\r\n      {tests.length === 0 ? (\r\n        <p>No tests found.</p>\r\n      ) : (\r\n        <ul>\r\n          {tests.map((test) => (\r\n            <li key={test.Id}>\r\n              <p>{test.Name} </p>\r\n              <p> {test.Desciption}</p>\r\n            </li>\r\n          ))}\r\n        </ul>\r\n      )}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Test;\r\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,QAAQ,EAAEC,SAAS,QAAQ,OAAO;AAClD,OAAOC,WAAW,MAAM,0BAA0B;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAEnD,MAAMC,IAAI,GAAGA,CAAA,KAAM;EAAAC,EAAA;EACjB,MAAM,CAACC,KAAK,EAAEC,QAAQ,CAAC,GAAGR,QAAQ,CAAC,EAAE,CAAC;EAEtCC,SAAS,CAAC,MAAM;IACd,MAAMQ,UAAU,GAAG,MAAAA,CAAA,KAAY;MAC7B,IAAI;QACF,MAAMC,QAAQ,GAAG,MAAMR,WAAW,CAACS,QAAQ,CAAC,CAAC;QAC7CH,QAAQ,CAACE,QAAQ,CAACE,IAAI,CAAC;MACzB,CAAC,CAAC,OAAOC,KAAK,EAAE;QACdC,OAAO,CAACD,KAAK,CAAC,uBAAuB,EAAEA,KAAK,CAAC;MAC/C;IACF,CAAC;IAEDJ,UAAU,CAAC,CAAC;EACd,CAAC,EAAE,EAAE,CAAC;EAEN,oBACEL,OAAA;IAAAW,QAAA,gBACEX,OAAA;MAAAW,QAAA,EAAI;IAAK;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAI,CAAC,EACbZ,KAAK,CAACa,MAAM,KAAK,CAAC,gBACjBhB,OAAA;MAAAW,QAAA,EAAG;IAAe;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAG,CAAC,gBAEtBf,OAAA;MAAAW,QAAA,EACGR,KAAK,CAACc,GAAG,CAAEC,IAAI,iBACdlB,OAAA;QAAAW,QAAA,gBACEX,OAAA;UAAAW,QAAA,GAAIO,IAAI,CAACC,IAAI,EAAC,GAAC;QAAA;UAAAP,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAG,CAAC,eACnBf,OAAA;UAAAW,QAAA,GAAG,GAAC,EAACO,IAAI,CAACE,UAAU;QAAA;UAAAR,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAI,CAAC;MAAA,GAFlBG,IAAI,CAACG,EAAE;QAAAT,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAGZ,CACL;IAAC;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACA,CACL;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACE,CAAC;AAEV,CAAC;AAACb,EAAA,CAjCID,IAAI;AAAAqB,EAAA,GAAJrB,IAAI;AAmCV,eAAeA,IAAI;AAAC,IAAAqB,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}