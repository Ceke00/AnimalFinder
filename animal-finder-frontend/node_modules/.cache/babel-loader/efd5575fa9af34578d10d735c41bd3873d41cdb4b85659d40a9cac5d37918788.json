{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Elev\\\\source\\\\Fullstack\\\\AnimalFinder\\\\animal-finder-frontend\\\\src\\\\components\\\\ProtectedRoute.js\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n//Children will be rendered if there is a user information with user name saved in local storage (authenticated user). If not user will be redirected to login\nconst ProtectedRoute = ({\n  children\n}) => {\n  const storedUser = localStorage.getItem(\"user\");\n  const isAuthenticated = storedUser && JSON.parse(storedUser).username;\n  return isAuthenticated ? children : /*#__PURE__*/_jsxDEV(Navigate, {\n    to: \"/login\"\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 7,\n    columnNumber: 39\n  }, this);\n};\n_c = ProtectedRoute;\nexport default ProtectedRoute;\nvar _c;\n$RefreshReg$(_c, \"ProtectedRoute\");","map":{"version":3,"names":["ProtectedRoute","children","storedUser","localStorage","getItem","isAuthenticated","JSON","parse","username","_jsxDEV","Navigate","to","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["C:/Users/Elev/source/Fullstack/AnimalFinder/animal-finder-frontend/src/components/ProtectedRoute.js"],"sourcesContent":["\r\n//Children will be rendered if there is a user information with user name saved in local storage (authenticated user). If not user will be redirected to login\r\nconst ProtectedRoute = ({ children }) => {\r\n  const storedUser = localStorage.getItem(\"user\");\r\n  const isAuthenticated = storedUser && JSON.parse(storedUser).username;\r\n\r\n  return isAuthenticated ? children : <Navigate to=\"/login\" />;\r\n};\r\nexport default ProtectedRoute;\r\n"],"mappings":";;AACA;AACA,MAAMA,cAAc,GAAGA,CAAC;EAAEC;AAAS,CAAC,KAAK;EACvC,MAAMC,UAAU,GAAGC,YAAY,CAACC,OAAO,CAAC,MAAM,CAAC;EAC/C,MAAMC,eAAe,GAAGH,UAAU,IAAII,IAAI,CAACC,KAAK,CAACL,UAAU,CAAC,CAACM,QAAQ;EAErE,OAAOH,eAAe,GAAGJ,QAAQ,gBAAGQ,OAAA,CAACC,QAAQ;IAACC,EAAE,EAAC;EAAQ;IAAAC,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OAAE,CAAC;AAC9D,CAAC;AAACC,EAAA,GALIhB,cAAc;AAMpB,eAAeA,cAAc;AAAC,IAAAgB,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}