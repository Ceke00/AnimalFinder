{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Elev\\\\source\\\\Fullstack\\\\AnimalFinder\\\\animal-finder-frontend\\\\src\\\\pages\\\\LoginPage.jsx\",\n  _s = $RefreshSig$();\nimport React, { useState } from \"react\";\nimport AuthService from \"../services/auth.service\";\nimport { useNavigate } from \"react-router-dom\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst LoginPage = () => {\n  _s();\n  const [username, setUsername] = useState(\"\");\n  const [password, setPassword] = useState(\"\");\n  const navigate = useNavigate();\n\n  //   const handleLogin = async (e) => {\n  //     e.preventDefault();\n  //     try {\n  //       const response = await AuthService.login(username, password);\n  //       localStorage.setItem(\"user\", JSON.stringify(response.data));\n  //       navigate(\"/dashboard\");\n  //     } catch (error) {\n  //       // Hantera fel\n  //     }\n  //   };\n\n  const handleLogin = async e => {\n    e.preventDefault();\n    try {\n      // Hämta användardata direkt från login-funktionen\n      const userData = await AuthService.login(username, password);\n      console.log(\"Logged in user data:\", userData);\n      navigate(\"/dashboard\");\n    } catch (error) {\n      console.error(\"Inloggningsfel:\", error);\n      // Här kan du lägga till felhantering, t.ex. visa ett felmeddelande för användaren\n      alert(\"Inloggningen misslyckades. Kontrollera dina uppgifter.\");\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"form\", {\n    onSubmit: handleLogin,\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"label\", {\n        children: \"Anv\\xE4ndarnamn\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 39,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        value: username,\n        onChange: e => setUsername(e.target.value)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 40,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 38,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"label\", {\n        children: \"L\\xF6senord\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 47,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"password\",\n        value: password,\n        onChange: e => setPassword(e.target.value)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 48,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 46,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      type: \"submit\",\n      children: \"Logga in\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 54,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 37,\n    columnNumber: 5\n  }, this);\n};\n_s(LoginPage, \"JBV44+s3MGwvm5P+UO1Bab3M9dc=\", false, function () {\n  return [useNavigate];\n});\n_c = LoginPage;\nexport default LoginPage;\nvar _c;\n$RefreshReg$(_c, \"LoginPage\");","map":{"version":3,"names":["React","useState","AuthService","useNavigate","jsxDEV","_jsxDEV","LoginPage","_s","username","setUsername","password","setPassword","navigate","handleLogin","e","preventDefault","userData","login","console","log","error","alert","onSubmit","children","fileName","_jsxFileName","lineNumber","columnNumber","type","value","onChange","target","_c","$RefreshReg$"],"sources":["C:/Users/Elev/source/Fullstack/AnimalFinder/animal-finder-frontend/src/pages/LoginPage.jsx"],"sourcesContent":["import React, { useState } from \"react\";\r\nimport AuthService from \"../services/auth.service\";\r\nimport { useNavigate } from \"react-router-dom\";\r\n\r\nconst LoginPage = () => {\r\n  const [username, setUsername] = useState(\"\");\r\n  const [password, setPassword] = useState(\"\");\r\n  const navigate = useNavigate();\r\n\r\n  //   const handleLogin = async (e) => {\r\n  //     e.preventDefault();\r\n  //     try {\r\n  //       const response = await AuthService.login(username, password);\r\n  //       localStorage.setItem(\"user\", JSON.stringify(response.data));\r\n  //       navigate(\"/dashboard\");\r\n  //     } catch (error) {\r\n  //       // Hantera fel\r\n  //     }\r\n  //   };\r\n\r\n  const handleLogin = async (e) => {\r\n    e.preventDefault();\r\n    try {\r\n      // Hämta användardata direkt från login-funktionen\r\n      const userData = await AuthService.login(username, password);\r\n\r\n      console.log(\"Logged in user data:\", userData);\r\n      navigate(\"/dashboard\");\r\n    } catch (error) {\r\n      console.error(\"Inloggningsfel:\", error);\r\n      // Här kan du lägga till felhantering, t.ex. visa ett felmeddelande för användaren\r\n      alert(\"Inloggningen misslyckades. Kontrollera dina uppgifter.\");\r\n    }\r\n  };\r\n\r\n  return (\r\n    <form onSubmit={handleLogin}>\r\n      <div>\r\n        <label>Användarnamn</label>\r\n        <input\r\n          type=\"text\"\r\n          value={username}\r\n          onChange={(e) => setUsername(e.target.value)}\r\n        />\r\n      </div>\r\n      <div>\r\n        <label>Lösenord</label>\r\n        <input\r\n          type=\"password\"\r\n          value={password}\r\n          onChange={(e) => setPassword(e.target.value)}\r\n        />\r\n      </div>\r\n      <button type=\"submit\">Logga in</button>\r\n    </form>\r\n  );\r\n};\r\n\r\nexport default LoginPage;\r\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,QAAQ,QAAQ,OAAO;AACvC,OAAOC,WAAW,MAAM,0BAA0B;AAClD,SAASC,WAAW,QAAQ,kBAAkB;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAE/C,MAAMC,SAAS,GAAGA,CAAA,KAAM;EAAAC,EAAA;EACtB,MAAM,CAACC,QAAQ,EAAEC,WAAW,CAAC,GAAGR,QAAQ,CAAC,EAAE,CAAC;EAC5C,MAAM,CAACS,QAAQ,EAAEC,WAAW,CAAC,GAAGV,QAAQ,CAAC,EAAE,CAAC;EAC5C,MAAMW,QAAQ,GAAGT,WAAW,CAAC,CAAC;;EAE9B;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;;EAEA,MAAMU,WAAW,GAAG,MAAOC,CAAC,IAAK;IAC/BA,CAAC,CAACC,cAAc,CAAC,CAAC;IAClB,IAAI;MACF;MACA,MAAMC,QAAQ,GAAG,MAAMd,WAAW,CAACe,KAAK,CAACT,QAAQ,EAAEE,QAAQ,CAAC;MAE5DQ,OAAO,CAACC,GAAG,CAAC,sBAAsB,EAAEH,QAAQ,CAAC;MAC7CJ,QAAQ,CAAC,YAAY,CAAC;IACxB,CAAC,CAAC,OAAOQ,KAAK,EAAE;MACdF,OAAO,CAACE,KAAK,CAAC,iBAAiB,EAAEA,KAAK,CAAC;MACvC;MACAC,KAAK,CAAC,wDAAwD,CAAC;IACjE;EACF,CAAC;EAED,oBACEhB,OAAA;IAAMiB,QAAQ,EAAET,WAAY;IAAAU,QAAA,gBAC1BlB,OAAA;MAAAkB,QAAA,gBACElB,OAAA;QAAAkB,QAAA,EAAO;MAAY;QAAAC,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAO,CAAC,eAC3BtB,OAAA;QACEuB,IAAI,EAAC,MAAM;QACXC,KAAK,EAAErB,QAAS;QAChBsB,QAAQ,EAAGhB,CAAC,IAAKL,WAAW,CAACK,CAAC,CAACiB,MAAM,CAACF,KAAK;MAAE;QAAAL,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAC9C,CAAC;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACC,CAAC,eACNtB,OAAA;MAAAkB,QAAA,gBACElB,OAAA;QAAAkB,QAAA,EAAO;MAAQ;QAAAC,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAO,CAAC,eACvBtB,OAAA;QACEuB,IAAI,EAAC,UAAU;QACfC,KAAK,EAAEnB,QAAS;QAChBoB,QAAQ,EAAGhB,CAAC,IAAKH,WAAW,CAACG,CAAC,CAACiB,MAAM,CAACF,KAAK;MAAE;QAAAL,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAC9C,CAAC;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACC,CAAC,eACNtB,OAAA;MAAQuB,IAAI,EAAC,QAAQ;MAAAL,QAAA,EAAC;IAAQ;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAQ,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACnC,CAAC;AAEX,CAAC;AAACpB,EAAA,CApDID,SAAS;EAAA,QAGIH,WAAW;AAAA;AAAA6B,EAAA,GAHxB1B,SAAS;AAsDf,eAAeA,SAAS;AAAC,IAAA0B,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}