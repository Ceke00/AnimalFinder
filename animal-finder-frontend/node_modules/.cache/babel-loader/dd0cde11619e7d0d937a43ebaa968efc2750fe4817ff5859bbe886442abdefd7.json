{"ast":null,"code":"import axios from \"axios\";\nconst API_URL = \"https://localhost:7221/api/auth/\";\nconst register = (username, password) => {\n  return axios.post(API_URL + \"register\", {\n    username,\n    password\n  });\n};\nconst login = (email, password) => {\n  return axios.post(API_URL + \"login\", {\n    username,\n    password\n  }).then(response => {\n    console.log(\"Full login response:\", response); // L채gg till denna logg\n\n    if (response.data && response.data.token) {\n      const userData = {\n        token: response.data.token,\n        username: username\n      };\n      console.log(\"Saving user data to localStorage:\", userData);\n      localStorage.setItem(\"user\", JSON.stringify(userData));\n      return userData; // Returnera hela anv채ndarobjektet\n    } else {\n      throw new Error(\"No token received\");\n    }\n  });\n};\nconst logout = () => {\n  localStorage.removeItem(\"user\");\n};\nexport default {\n  register,\n  login,\n  logout\n};","map":{"version":3,"names":["axios","API_URL","register","username","password","post","login","email","then","response","console","log","data","token","userData","localStorage","setItem","JSON","stringify","Error","logout","removeItem"],"sources":["C:/Users/Elev/source/Fullstack/AnimalFinder/animal-finder-frontend/src/services/auth.service.js"],"sourcesContent":["import axios from \"axios\";\r\n\r\nconst API_URL = \"https://localhost:7221/api/auth/\";\r\n\r\nconst register = (username, password) => {\r\n  return axios.post(API_URL + \"register\", {\r\n    username,\r\n    password,\r\n  });\r\n};\r\n\r\nconst login = (email, password) => {\r\n  return axios\r\n    .post(API_URL + \"login\", {\r\n      username,\r\n      password,\r\n    })\r\n    .then((response) => {\r\n      console.log(\"Full login response:\", response); // L채gg till denna logg\r\n\r\n      if (response.data && response.data.token) {\r\n        const userData = {\r\n          token: response.data.token,\r\n          username: username,\r\n        };\r\n        console.log(\"Saving user data to localStorage:\", userData);\r\n        localStorage.setItem(\"user\", JSON.stringify(userData));\r\n        return userData; // Returnera hela anv채ndarobjektet\r\n      } else {\r\n        throw new Error(\"No token received\");\r\n      }\r\n    });\r\n};\r\nconst logout = () => {\r\n  localStorage.removeItem(\"user\");\r\n};\r\n\r\nexport default {\r\n  register,\r\n  login,\r\n  logout,\r\n};\r\n\r\n\r\n\r\n"],"mappings":"AAAA,OAAOA,KAAK,MAAM,OAAO;AAEzB,MAAMC,OAAO,GAAG,kCAAkC;AAElD,MAAMC,QAAQ,GAAGA,CAACC,QAAQ,EAAEC,QAAQ,KAAK;EACvC,OAAOJ,KAAK,CAACK,IAAI,CAACJ,OAAO,GAAG,UAAU,EAAE;IACtCE,QAAQ;IACRC;EACF,CAAC,CAAC;AACJ,CAAC;AAED,MAAME,KAAK,GAAGA,CAACC,KAAK,EAAEH,QAAQ,KAAK;EACjC,OAAOJ,KAAK,CACTK,IAAI,CAACJ,OAAO,GAAG,OAAO,EAAE;IACvBE,QAAQ;IACRC;EACF,CAAC,CAAC,CACDI,IAAI,CAAEC,QAAQ,IAAK;IAClBC,OAAO,CAACC,GAAG,CAAC,sBAAsB,EAAEF,QAAQ,CAAC,CAAC,CAAC;;IAE/C,IAAIA,QAAQ,CAACG,IAAI,IAAIH,QAAQ,CAACG,IAAI,CAACC,KAAK,EAAE;MACxC,MAAMC,QAAQ,GAAG;QACfD,KAAK,EAAEJ,QAAQ,CAACG,IAAI,CAACC,KAAK;QAC1BV,QAAQ,EAAEA;MACZ,CAAC;MACDO,OAAO,CAACC,GAAG,CAAC,mCAAmC,EAAEG,QAAQ,CAAC;MAC1DC,YAAY,CAACC,OAAO,CAAC,MAAM,EAAEC,IAAI,CAACC,SAAS,CAACJ,QAAQ,CAAC,CAAC;MACtD,OAAOA,QAAQ,CAAC,CAAC;IACnB,CAAC,MAAM;MACL,MAAM,IAAIK,KAAK,CAAC,mBAAmB,CAAC;IACtC;EACF,CAAC,CAAC;AACN,CAAC;AACD,MAAMC,MAAM,GAAGA,CAAA,KAAM;EACnBL,YAAY,CAACM,UAAU,CAAC,MAAM,CAAC;AACjC,CAAC;AAED,eAAe;EACbnB,QAAQ;EACRI,KAAK;EACLc;AACF,CAAC","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}